---
- name: Resolve platform specific vars
  ansible.builtin.include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: Look for install in {{ tflint_install_dir }}
  become: true
  ansible.builtin.stat:
    path: '{{ tflint_install_dir }}'
  changed_when: false
  register: tflint_binary
- name: Downloading and installing tflint
  when: not tflint_binary.stat.exists
  block:
    - name: Downloading {{ tflint_url }}
      become: true
      become_user: root
      ansible.builtin.get_url:
        url: '{{ tflint_url }}'
        dest: '{{ tflint_tmp_zip }}'
        mode: '644'
        checksum: '{{ tflint_checksum }}'
    - name: Mkdir {{ tflint_install_dir }}
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ tflint_install_dir }}'
        state: directory
        mode: '755'
    - name: Installing andrewrothstein.unarchivedeps
      ansible.builtin.include_role:
        name: andrewrothstein.unarchivedeps
    - name: Unarchive to {{ tflint_install_dir }}
      become: true
      become_user: root
      ansible.builtin.unarchive:
        remote_src: true
        src: '{{ tflint_tmp_zip }}'
        dest: '{{ tflint_install_dir }}'
        creates: '{{ tflint_exe }}'
  always:
    - name: Rm {{ tflint_tmp_zip }}
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ tflint_tmp_zip }}'
        state: absent
- name: Link {{ tflint_link }} to {{ tflint_exe }}
  become: true
  become_user: root
  ansible.builtin.file:
    src: '{{ tflint_exe }}'
    dest: '{{ tflint_link }}'
    state: link
